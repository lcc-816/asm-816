/* gen-m-table.pl Thu Sep 22 17:22:16 2011 */

const char *MnemonicToString(Mnemonic mnemonic)
{
  switch(mnemonic)
  {
    case kUndefinedMnemonic:  return NULL;
    case ADC: return "ADC";
    case AND: return "AND";
    case ASL: return "ASL";
    case BBR0: return "BBR0";
    case BBR1: return "BBR1";
    case BBR2: return "BBR2";
    case BBR3: return "BBR3";
    case BBR4: return "BBR4";
    case BBR5: return "BBR5";
    case BBR6: return "BBR6";
    case BBR7: return "BBR7";
    case BBS0: return "BBS0";
    case BBS1: return "BBS1";
    case BBS2: return "BBS2";
    case BBS3: return "BBS3";
    case BBS4: return "BBS4";
    case BBS5: return "BBS5";
    case BBS6: return "BBS6";
    case BBS7: return "BBS7";
    case BCC: return "BCC";
    case BCS: return "BCS";
    case BEQ: return "BEQ";
    case BIT: return "BIT";
    case BMI: return "BMI";
    case BNE: return "BNE";
    case BPL: return "BPL";
    case BRA: return "BRA";
    case BRK: return "BRK";
    case BRL: return "BRL";
    case BVC: return "BVC";
    case BVS: return "BVS";
    case CLC: return "CLC";
    case CLD: return "CLD";
    case CLI: return "CLI";
    case CLV: return "CLV";
    case CMP: return "CMP";
    case COP: return "COP";
    case CPX: return "CPX";
    case CPY: return "CPY";
    case DEC: return "DEC";
    case DEX: return "DEX";
    case DEY: return "DEY";
    case EOR: return "EOR";
    case INC: return "INC";
    case INX: return "INX";
    case INY: return "INY";
    case JML: return "JML";
    case JMP: return "JMP";
    case JSL: return "JSL";
    case JSR: return "JSR";
    case LDA: return "LDA";
    case LDX: return "LDX";
    case LDY: return "LDY";
    case LSR: return "LSR";
    case MVN: return "MVN";
    case MVP: return "MVP";
    case NOP: return "NOP";
    case ORA: return "ORA";
    case PEA: return "PEA";
    case PEI: return "PEI";
    case PER: return "PER";
    case PHA: return "PHA";
    case PHB: return "PHB";
    case PHD: return "PHD";
    case PHK: return "PHK";
    case PHP: return "PHP";
    case PHX: return "PHX";
    case PHY: return "PHY";
    case PLA: return "PLA";
    case PLB: return "PLB";
    case PLD: return "PLD";
    case PLP: return "PLP";
    case PLX: return "PLX";
    case PLY: return "PLY";
    case REP: return "REP";
    case RMB0: return "RMB0";
    case RMB1: return "RMB1";
    case RMB2: return "RMB2";
    case RMB3: return "RMB3";
    case RMB4: return "RMB4";
    case RMB5: return "RMB5";
    case RMB6: return "RMB6";
    case RMB7: return "RMB7";
    case ROL: return "ROL";
    case ROR: return "ROR";
    case RTI: return "RTI";
    case RTL: return "RTL";
    case RTS: return "RTS";
    case SBC: return "SBC";
    case SEC: return "SEC";
    case SED: return "SED";
    case SEI: return "SEI";
    case SEP: return "SEP";
    case SMB0: return "SMB0";
    case SMB1: return "SMB1";
    case SMB2: return "SMB2";
    case SMB3: return "SMB3";
    case SMB4: return "SMB4";
    case SMB5: return "SMB5";
    case SMB6: return "SMB6";
    case SMB7: return "SMB7";
    case STA: return "STA";
    case STP: return "STP";
    case STX: return "STX";
    case STY: return "STY";
    case STZ: return "STZ";
    case TAX: return "TAX";
    case TAY: return "TAY";
    case TCD: return "TCD";
    case TCS: return "TCS";
    case TDC: return "TDC";
    case TRB: return "TRB";
    case TSB: return "TSB";
    case TSC: return "TSC";
    case TSX: return "TSX";
    case TXA: return "TXA";
    case TXS: return "TXS";
    case TXY: return "TXY";
    case TYA: return "TYA";
    case TYX: return "TYX";
    case WAI: return "WAI";
    case WDM: return "WDM";
    case XBA: return "XBA";
    case XCE: return "XCE";
  }
  return NULL;
}

CFStringRef MnemonicToCFString(Mnemonic mnemonic)
{
  switch(mnemonic)
  {
    case kUndefinedMnemonic:  return NULL;
    case ADC: return CFSTR("ADC");
    case AND: return CFSTR("AND");
    case ASL: return CFSTR("ASL");
    case BBR0: return CFSTR("BBR0");
    case BBR1: return CFSTR("BBR1");
    case BBR2: return CFSTR("BBR2");
    case BBR3: return CFSTR("BBR3");
    case BBR4: return CFSTR("BBR4");
    case BBR5: return CFSTR("BBR5");
    case BBR6: return CFSTR("BBR6");
    case BBR7: return CFSTR("BBR7");
    case BBS0: return CFSTR("BBS0");
    case BBS1: return CFSTR("BBS1");
    case BBS2: return CFSTR("BBS2");
    case BBS3: return CFSTR("BBS3");
    case BBS4: return CFSTR("BBS4");
    case BBS5: return CFSTR("BBS5");
    case BBS6: return CFSTR("BBS6");
    case BBS7: return CFSTR("BBS7");
    case BCC: return CFSTR("BCC");
    case BCS: return CFSTR("BCS");
    case BEQ: return CFSTR("BEQ");
    case BIT: return CFSTR("BIT");
    case BMI: return CFSTR("BMI");
    case BNE: return CFSTR("BNE");
    case BPL: return CFSTR("BPL");
    case BRA: return CFSTR("BRA");
    case BRK: return CFSTR("BRK");
    case BRL: return CFSTR("BRL");
    case BVC: return CFSTR("BVC");
    case BVS: return CFSTR("BVS");
    case CLC: return CFSTR("CLC");
    case CLD: return CFSTR("CLD");
    case CLI: return CFSTR("CLI");
    case CLV: return CFSTR("CLV");
    case CMP: return CFSTR("CMP");
    case COP: return CFSTR("COP");
    case CPX: return CFSTR("CPX");
    case CPY: return CFSTR("CPY");
    case DEC: return CFSTR("DEC");
    case DEX: return CFSTR("DEX");
    case DEY: return CFSTR("DEY");
    case EOR: return CFSTR("EOR");
    case INC: return CFSTR("INC");
    case INX: return CFSTR("INX");
    case INY: return CFSTR("INY");
    case JML: return CFSTR("JML");
    case JMP: return CFSTR("JMP");
    case JSL: return CFSTR("JSL");
    case JSR: return CFSTR("JSR");
    case LDA: return CFSTR("LDA");
    case LDX: return CFSTR("LDX");
    case LDY: return CFSTR("LDY");
    case LSR: return CFSTR("LSR");
    case MVN: return CFSTR("MVN");
    case MVP: return CFSTR("MVP");
    case NOP: return CFSTR("NOP");
    case ORA: return CFSTR("ORA");
    case PEA: return CFSTR("PEA");
    case PEI: return CFSTR("PEI");
    case PER: return CFSTR("PER");
    case PHA: return CFSTR("PHA");
    case PHB: return CFSTR("PHB");
    case PHD: return CFSTR("PHD");
    case PHK: return CFSTR("PHK");
    case PHP: return CFSTR("PHP");
    case PHX: return CFSTR("PHX");
    case PHY: return CFSTR("PHY");
    case PLA: return CFSTR("PLA");
    case PLB: return CFSTR("PLB");
    case PLD: return CFSTR("PLD");
    case PLP: return CFSTR("PLP");
    case PLX: return CFSTR("PLX");
    case PLY: return CFSTR("PLY");
    case REP: return CFSTR("REP");
    case RMB0: return CFSTR("RMB0");
    case RMB1: return CFSTR("RMB1");
    case RMB2: return CFSTR("RMB2");
    case RMB3: return CFSTR("RMB3");
    case RMB4: return CFSTR("RMB4");
    case RMB5: return CFSTR("RMB5");
    case RMB6: return CFSTR("RMB6");
    case RMB7: return CFSTR("RMB7");
    case ROL: return CFSTR("ROL");
    case ROR: return CFSTR("ROR");
    case RTI: return CFSTR("RTI");
    case RTL: return CFSTR("RTL");
    case RTS: return CFSTR("RTS");
    case SBC: return CFSTR("SBC");
    case SEC: return CFSTR("SEC");
    case SED: return CFSTR("SED");
    case SEI: return CFSTR("SEI");
    case SEP: return CFSTR("SEP");
    case SMB0: return CFSTR("SMB0");
    case SMB1: return CFSTR("SMB1");
    case SMB2: return CFSTR("SMB2");
    case SMB3: return CFSTR("SMB3");
    case SMB4: return CFSTR("SMB4");
    case SMB5: return CFSTR("SMB5");
    case SMB6: return CFSTR("SMB6");
    case SMB7: return CFSTR("SMB7");
    case STA: return CFSTR("STA");
    case STP: return CFSTR("STP");
    case STX: return CFSTR("STX");
    case STY: return CFSTR("STY");
    case STZ: return CFSTR("STZ");
    case TAX: return CFSTR("TAX");
    case TAY: return CFSTR("TAY");
    case TCD: return CFSTR("TCD");
    case TCS: return CFSTR("TCS");
    case TDC: return CFSTR("TDC");
    case TRB: return CFSTR("TRB");
    case TSB: return CFSTR("TSB");
    case TSC: return CFSTR("TSC");
    case TSX: return CFSTR("TSX");
    case TXA: return CFSTR("TXA");
    case TXS: return CFSTR("TXS");
    case TXY: return CFSTR("TXY");
    case TYA: return CFSTR("TYA");
    case TYX: return CFSTR("TYX");
    case WAI: return CFSTR("WAI");
    case WDM: return CFSTR("WDM");
    case XBA: return CFSTR("XBA");
    case XCE: return CFSTR("XCE");
  }
  return NULL;
}

NSString *MnemonicToNSString(Mnemonic mnemonic)
{
  switch(mnemonic)
  {
    case kUndefinedMnemonic:  return nil;
    case ADC: return @"ADC";
    case AND: return @"AND";
    case ASL: return @"ASL";
    case BBR0: return @"BBR0";
    case BBR1: return @"BBR1";
    case BBR2: return @"BBR2";
    case BBR3: return @"BBR3";
    case BBR4: return @"BBR4";
    case BBR5: return @"BBR5";
    case BBR6: return @"BBR6";
    case BBR7: return @"BBR7";
    case BBS0: return @"BBS0";
    case BBS1: return @"BBS1";
    case BBS2: return @"BBS2";
    case BBS3: return @"BBS3";
    case BBS4: return @"BBS4";
    case BBS5: return @"BBS5";
    case BBS6: return @"BBS6";
    case BBS7: return @"BBS7";
    case BCC: return @"BCC";
    case BCS: return @"BCS";
    case BEQ: return @"BEQ";
    case BIT: return @"BIT";
    case BMI: return @"BMI";
    case BNE: return @"BNE";
    case BPL: return @"BPL";
    case BRA: return @"BRA";
    case BRK: return @"BRK";
    case BRL: return @"BRL";
    case BVC: return @"BVC";
    case BVS: return @"BVS";
    case CLC: return @"CLC";
    case CLD: return @"CLD";
    case CLI: return @"CLI";
    case CLV: return @"CLV";
    case CMP: return @"CMP";
    case COP: return @"COP";
    case CPX: return @"CPX";
    case CPY: return @"CPY";
    case DEC: return @"DEC";
    case DEX: return @"DEX";
    case DEY: return @"DEY";
    case EOR: return @"EOR";
    case INC: return @"INC";
    case INX: return @"INX";
    case INY: return @"INY";
    case JML: return @"JML";
    case JMP: return @"JMP";
    case JSL: return @"JSL";
    case JSR: return @"JSR";
    case LDA: return @"LDA";
    case LDX: return @"LDX";
    case LDY: return @"LDY";
    case LSR: return @"LSR";
    case MVN: return @"MVN";
    case MVP: return @"MVP";
    case NOP: return @"NOP";
    case ORA: return @"ORA";
    case PEA: return @"PEA";
    case PEI: return @"PEI";
    case PER: return @"PER";
    case PHA: return @"PHA";
    case PHB: return @"PHB";
    case PHD: return @"PHD";
    case PHK: return @"PHK";
    case PHP: return @"PHP";
    case PHX: return @"PHX";
    case PHY: return @"PHY";
    case PLA: return @"PLA";
    case PLB: return @"PLB";
    case PLD: return @"PLD";
    case PLP: return @"PLP";
    case PLX: return @"PLX";
    case PLY: return @"PLY";
    case REP: return @"REP";
    case RMB0: return @"RMB0";
    case RMB1: return @"RMB1";
    case RMB2: return @"RMB2";
    case RMB3: return @"RMB3";
    case RMB4: return @"RMB4";
    case RMB5: return @"RMB5";
    case RMB6: return @"RMB6";
    case RMB7: return @"RMB7";
    case ROL: return @"ROL";
    case ROR: return @"ROR";
    case RTI: return @"RTI";
    case RTL: return @"RTL";
    case RTS: return @"RTS";
    case SBC: return @"SBC";
    case SEC: return @"SEC";
    case SED: return @"SED";
    case SEI: return @"SEI";
    case SEP: return @"SEP";
    case SMB0: return @"SMB0";
    case SMB1: return @"SMB1";
    case SMB2: return @"SMB2";
    case SMB3: return @"SMB3";
    case SMB4: return @"SMB4";
    case SMB5: return @"SMB5";
    case SMB6: return @"SMB6";
    case SMB7: return @"SMB7";
    case STA: return @"STA";
    case STP: return @"STP";
    case STX: return @"STX";
    case STY: return @"STY";
    case STZ: return @"STZ";
    case TAX: return @"TAX";
    case TAY: return @"TAY";
    case TCD: return @"TCD";
    case TCS: return @"TCS";
    case TDC: return @"TDC";
    case TRB: return @"TRB";
    case TSB: return @"TSB";
    case TSC: return @"TSC";
    case TSX: return @"TSX";
    case TXA: return @"TXA";
    case TXS: return @"TXS";
    case TXY: return @"TXY";
    case TYA: return @"TYA";
    case TYX: return @"TYX";
    case WAI: return @"WAI";
    case WDM: return @"WDM";
    case XBA: return @"XBA";
    case XCE: return @"XCE";
  }
  return nil;
}
